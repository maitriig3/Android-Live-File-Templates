While committing new changes,
-> Export all the settings
-> Remove all the default and not required templates and export it for adding in Android-Live-File Templates
	-> Export only File Templates, File Templates (schemes) and Live Templates (schemes)
-> Import the previous settings

Templates not getting imported,
-> Find the templates in <User Directory>\AppData\Roaming\Google\AndroidStudio2023.3\templates
-> Paste the templates in the 'templates' folder

^^ - Yet to add in ReadMe
^_^ - Added in ReadMe

Live Templates

^_^ initiateSharedPreferencesInDaggerHilt
    -> Only after classes related to Shared Preferences has been added by calling 'InitiateSharedPreferences' File Template
    -> Need to import class after
        -> can enable '"Add unambiguous imports on the fly" in File -> Settings -> Editor -> General -> Auto Import -> Kotlin' to import directly

Live Templates - Dependent on InitiateAndroid

^_^ initiateRetrofitInDaggerHilt
    -> Only after classes related to retrofit has been added by calling 'InitiateRetrofit' file template
    -> Need to import class after
        -> can enable '"Add unambiguous imports on the fly" in File -> Settings -> Editor -> General -> Auto Import -> Kotlin' to import directly

^_^ initiateRoomDatabaseInDaggerHilt
    -> Only after dependency of Room Database is added and classes related to Room Database has been added by calling 'InitiateRoomDatabase' File Template
    -> Need to import class after
        -> can enable '"Add unambiguous imports on the fly" in File -> Settings -> Editor -> General -> Auto Import -> Kotlin' to import directly

File Templates

File Templates - Dependant on InitiateAndroid

^_^ InitiateListAdapterWithOnClick
    -> Add only description of adapter in field 'Adapter Name'. For example, if the input to field is 'Test', then class name would be 'TestAdapter' and view holder name would be 'TestViewHolder'
    -> In 'Item Type', add the type of the list
    -> In 'Binding File', View Binding file of item layout

^_^ InitiateRoomDatabase
    -> This should be called from base package and all the files are created in 'data/local/room' package
    -> It creates three files
        -> A sample entity class in 'data/local/room/entity' package
        -> A sample dao class in 'data/local/room/dao' package
        -> An AppDatabase class extending RoomDatabase with table defined in entity file, in 'data/local/room' package.
    -> All other tables required should be added in entity and dao packages and then added in AppDatabase file. App would have to uninstalled and installed after the changes are made or if it is production app, then version has to be migrated and new tables would be have to be created by defining migration.

^_^ InitiateSharedPreferences
    -> This should be called from base package and all the files are created in 'data/local/preferences' package
    -> It creates three files
        -> An object class 'PreferenceKeys' to store key values
        -> An interface 'PreferenceRepository' which contains 'get' and 'put' functions for String, Int and Boolean
        -> An implementation class 'PreferenceRepository' which contains implementations of 'get' and 'put' functions

^_^ InitiateImpl
    -> Creates an interface with the name provided and a class with the suffix 'Impl' and implementing the interface